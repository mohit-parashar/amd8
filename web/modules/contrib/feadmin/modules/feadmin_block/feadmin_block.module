<?php
/**
 * @file
 * Provides the hooks implementation to interface with Drupal.
 *
 * Sponsored by: www.freelance-drupal.com
 */

use Drupal\Core\Block\BlockPluginInterface;

/**
 * Implements hook_block_view_alter().
 */
function feadmin_block_block_view_alter(array &$build, BlockPluginInterface $block) {
  $build['#contextual_links']['feadmin_block'] = [
    'route_parameters' => ['block' => $build['#id']],
  ];
}

/**
 * Implements hook_toolbar_alter().
 */
function feadmin_block_toolbar_alter(&$items) {
  if (\Drupal::currentUser()->hasPermission('use feadmin')) {
    //$items['contextual']['#attached']['library'][] = 'edit_ui_contextual/edit_ui_contextual';
  }
}

/**
 * Implements hook_preprocess_region().
 */
function feadmin_block_preprocess_page(&$variables) {
  if (!_feadmin_is_adminpage()) {
    $available_tools = \Drupal::config('feadmin.settings')->get('tools');

    // Let's add some custom markup to all empty regions,
    // to allow dragging inside those regions.
    if ($available_tools && isset($available_tools['feadmin_block']) && $available_tools['feadmin_block']['enabled']) {
      $visible_regions = system_region_list(\Drupal::theme()
        ->getActiveTheme()
        ->getName(), REGIONS_VISIBLE);
      foreach (array_keys($visible_regions) as $region) {
        if (empty($variables['page'][$region])) {
          $variables['page'][$region] = array(
            '#theme_wrappers' => array("region"),
            '#region' => $region,
            '#attributes' => array(
              'class' => array('empty-region'),
            )
          );
        }
        $empty_block = array(
          '#type' => 'inline_template',
          '#template' => '<div class="empty-block">{{ region_name }}</div>',
          '#context' => array('region_name' => $visible_regions[$region]),
          '#weight' => 0,
        );
        array_unshift($variables['page'][$region], $empty_block);
      }
    }
  }
}

/**
 * Implements hook_preprocess_region().
 */
function feadmin_block_preprocess_region(&$variables) {
  $available_tools = \Drupal::config('feadmin.settings')->get('tools');
  if (!_feadmin_is_adminpage() &&
    $available_tools &&
    isset($available_tools['feadmin_block']) &&
    $available_tools['feadmin_block']['enabled']) {
    $variables['attributes']['data-region'] = $variables['region'];
  }
}

/**
 * Implements hook_preprocess_block().
 */
function feadmin_block_preprocess_block(&$variables) {
  $available_tools = \Drupal::config('feadmin.settings')->get('tools');
  if (!_feadmin_is_adminpage() &&
    $available_tools &&
    isset($available_tools['feadmin_block']) &&
    $available_tools['feadmin_block']['enabled']) {
    $variables['attributes']['data-block'] = $variables['elements']['#id'];

    /*// Render admin tools;
    $list = array(
      'move' => array(
        '#markup' => t("Move this block"),
        '#wrapper_attributes' => array(
          'class' => array('feadmin_block-links-move'),
        )
      ),
      'edit' => array(
        '#markup' => t("Edit this block"),
        '#wrapper_attributes' => array(
          'class' => array('feadmin_block-links-edit'),
        )
      ),
      'delete' => array(
        '#markup' => t("Delete this block"),
        '#wrapper_attributes' => array(
          'class' => array('feadmin_block-links-delete'),
        )
      ),
    );
    $variables['title_suffix']['feadmin-block-links'] = array(
      '#theme' => 'item_list',
      '#items' => $list,
      '#attributes' => array(
        'class' => array('feadmin_block-links'),
      )
    );*/
  }
}

/**
 * Implements hook_page_attachment_alter().
 */
function feadmin_block_page_attachments_alter(array &$attachments) {
  if (!_feadmin_is_adminpage()) {
    $attachments['#attached']['library'][] = 'feadmin_block/feadmin_block.basics';
  }
}